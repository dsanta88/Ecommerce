@page "/cart"
@inject ICartService CartService
 

<h3>Shopping Cart</h3>
@if(cartItem==null || cartItem.Count<=0)
{
    <span> You have no item in your cart.</span>
}
else
{
    <div>
        @foreach(var item in cartItem)
        {
            <div class="item-container">
                <div class="item-image-wrapper"><img src="@item.Image" class="item-image"/></div>
                <div class="item-name">
                    <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                    <span>@item.EditionName</span>
                    <button class="btn-delete" @onclick="@(()=>DeleteItem(item))">Eliminar</button>
                </div>
                <div class="item-price">$@item.Price</div>
            </div>
        }
        <div class="item-price">
            Total (@cartItem.Count): $@cartItem.Sum(x=>x.Price)
        </div>
    </div>
}
@code
{
    List<CartItem> cartItem = new List<CartItem>();

    protected override async Task OnInitializedAsync()
    {
        cartItem = await CartService.GetCartItems();

    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItem = await CartService.GetCartItems();
    }

}